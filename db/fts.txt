CREATE EXTENSION IF NOT EXISTS unaccent;


-- Trong bảng products
ALTER TABLE products ADD COLUMN fts tsvector;

-- Trong bảng product_variants
ALTER TABLE product_variants ADD COLUMN fts tsvector;


-- Bảng products
UPDATE products SET fts = 
  to_tsvector('simple', unaccent(coalesce(product_name, '') || ' ' || coalesce(description, '')));

-- Bảng product_variants
UPDATE product_variants SET fts = 
  to_tsvector('simple', unaccent(coalesce(sku, '') || ' ' || coalesce(barcode, '')));


CREATE INDEX idx_products_fts ON products USING GIN (fts);
CREATE INDEX idx_product_variants_fts ON product_variants USING GIN (fts);


-- Cho bảng products
CREATE OR REPLACE FUNCTION products_fts_trigger() RETURNS trigger AS $$
BEGIN
  NEW.fts := to_tsvector('simple', unaccent(coalesce(NEW.product_name, '') || ' ' || coalesce(NEW.description, '')));
  RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- Cho bảng product_variants
CREATE OR REPLACE FUNCTION product_variants_fts_trigger() RETURNS trigger AS $$
BEGIN
  NEW.fts := to_tsvector('simple', unaccent(coalesce(NEW.sku, '') || ' ' || coalesce(NEW.barcode, '')));
  RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- products
CREATE TRIGGER trg_products_fts
BEFORE INSERT OR UPDATE ON products
FOR EACH ROW EXECUTE FUNCTION products_fts_trigger();

-- product_variants
CREATE TRIGGER trg_product_variants_fts
BEFORE INSERT OR UPDATE ON product_variants
FOR EACH ROW EXECUTE FUNCTION product_variants_fts_trigger();


